{"type":"entity","entityType":"Developer","name":"Developer","observations":["Skilled .NET/C# developer with expertise in creating modular, focused libraries","Strong emphasis on type safety, precision, and correctness in code","Creates libraries around numerical precision, string safety, and utility functions","Publishes libraries as NuGet packages with consistent 'ktsu.' prefix","Maintains consistent repository structure with comprehensive documentation","Values clean interfaces and user-friendly APIs","Follows good engineering practices including testing and documentation","Uses MIT licensing for open source projects","Has interests spanning both scientific computing (Physics libraries) and practical tooling","Appears to balance academic/theoretical interests with practical utility"]}
{"type":"entity","entityType":"Developer","name":"Matthew Edmondson","observations":["Founder of ktsu.dev","Developed a collection of .NET libraries and tools","Believes strongly in writing clear, maintainable code that reduces cognitive load and minimizes errors","Focuses on creating simple, powerful abstractions and utilities that integrate with modern .NET practices","Places emphasis on semantic clarity as a core theme across projects","Aims to catch mistakes at compile time rather than runtime through strong typing","Focuses on simplifying development workflow to lower cognitive overhead","Emphasizes maintainability with consistent patterns and thorough documentation","Has created a cohesive ecosystem of .NET libraries with complementary functionality","Demonstrates expertise in numerical precision and type safety across multiple domains","Organized repositories with consistent structure, documentation, and licensing","Shows interest in both scientific computing (Physics libraries) and developer tooling","Created libraries focused on making development safer through compile-time verification","Publishes libraries as NuGet packages with comprehensive documentation","Develops libraries that follow single responsibility principle and are modular in nature","Founded ktsu.dev to create a collection of .NET libraries and tools that reduce cognitive load and minimize errors","Organizes libraries into four main themes: Semantic Clarity Through Strong Typing, Simplified and Streamlined APIs, Designed for Maintainability, and Leveraging Modern .NET Tooling","Emphasizes semantic clarity as a core theme across all projects","Advocates for embedding meaningful context directly into types to catch mistakes at compile time rather than runtime","Created libraries like StrongPaths and SemanticQuantity to turn common tasks into strongly-typed, error-resistant operations","Focuses on simplifying development workflow by eliminating repetitive boilerplate","Designed each library to solve a specific problem clearly and elegantly","Embraces modern .NET practices including nullable reference types, async/await patterns, and generic math","Enforces strict style guidelines and explicit coding choices across all projects","Focuses on making libraries small, focused, and following the single-responsibility principle","Prioritizes test-friendly design and comprehensive unit test suites","Maintains a large collection of over 40 specialized .NET libraries and tools","Welcomes collaboration and community contributions to the ktsu.dev projects","Veteran game developer, software engineer, and producer based in Melbourne, Australia","Over 10 years experience at Electronic Arts (EA) Firemonkeys studio, starting as software engineer and later becoming a producer","Worked as Studio Production Lead at indie studio The Three Thousands","Experience spans engineering, production, game design, 3D art, sound design, and music","Cross-disciplinary experience across coding, art, audio, and project strategy","Created ktsu.dev in 2023 as a collection of open-source .NET libraries and tools","Has interests in music production, sound design, building analog synthesizer modules, 3D modeling, digital art, and photography","Values mentoring, knowledge-sharing, and collaboration","Enjoys writing documentation, technical articles, and tutorials","Has personal website at matthewedmondson.com"]}
{"type":"entity","entityType":"Project","name":"AppDataStorage","observations":["A .NET library designed to simplify the process of managing application data","Facilitates saving and loading configuration or state data to the application's data folder using JSON serialization","Available as a NuGet package: ktsu.AppDataStorage","Source code is hosted on GitHub at ktsu-dev/AppDataStorage","Licensed under the MIT License"]}
{"type":"entity","entityType":"Project","name":"BuildMonitor","observations":["Repository contains a minimal README with only the title 'ktsu.BuildMonitor'","GitHub repository appears to be at ktsu-dev/BuildMonitor based on naming pattern"]}
{"type":"entity","entityType":"Project","name":"CaseConverter","observations":["A .NET library with extension methods to convert strings between common casings used in code","Support for TitleCase, PascalCase, camelCase, snake_case, kebab-case, MACRO_CASE conversions","Also provides UppercaseFirstChar and LowercaseFirstChar methods","GitHub repository appears to be at ktsu-dev/CaseConverter based on naming pattern"]}
{"type":"entity","entityType":"Project","name":"CodeBlocker","observations":["An extension to IndentedTextWriter that makes generating code blocks easier","Provides a fluent API for creating code with proper indentation and scope management","Uses a Scope class to manage indentation levels automatically","Useful for code generation tasks with proper formatting","GitHub repository appears to be at ktsu-dev/CodeBlocker based on naming pattern"]}
{"type":"entity","entityType":"Project","name":"CredentialCache","observations":["Repository contains a minimal README with only the name 'CredentialCache'","GitHub repository appears to be at ktsu-dev/CredentialCache based on naming pattern"]}
{"type":"entity","entityType":"Project","name":"DeepClone","observations":["A lightweight .NET library providing a simple, generic interface for implementing deep cloning functionality","Defines the IDeepCloneable<T> interface for creating deep copies of objects","Particularly useful when duplicate objects need fully cloned references, not just copied references","Inspired by and based on the ppy/osu! project's cloning utilities","Licensed under the MIT License","Available as a NuGet package (ktsu.DeepClone)","GitHub repository appears to be at ktsu-dev/DeepClone based on naming pattern"]}
{"type":"entity","entityType":"Project","name":"DelegateTransform","observations":["A utility library for transforming values using delegates in C#","Provides methods to apply transformations using ActionRef, Func, and FuncRef delegates","Available as a NuGet package","Licensed under the MIT License","GitHub repository appears to be at ktsu-dev/DelegateTransform based on naming pattern"]}
{"type":"entity","entityType":"Project","name":"FuzzySearch","observations":["A lightweight .NET library providing fuzzy string matching capabilities","Perfect for implementing search-as-you-type features, command palettes, or flexible string matching","Uses a scoring system that rewards consecutive matches, matches after separators, and camelCase boundary matches","Available as a NuGet package (ktsu.FuzzySearch)","Licensed under the MIT License","Adapted from implementation by Collin Dillinger","GitHub repository at ktsu-dev/FuzzySearch"]}
{"type":"entity","entityType":"Project","name":"ImGuiApp","observations":["A .NET library providing application scaffolding for Dear ImGui","Uses Silk.NET for OpenGL and input handling and ImGui.NET for UI","Manages window state, rendering, and input handling","Features DPI-aware scaling and offscreen positioning checks","Includes built-in font loading system and texture management","Provides flexible delegate callbacks for application lifecycle and menu handling","Supports .NET 8 and newer","Available as a NuGet package (ktsu.ImGuiApp)","Licensed under the MIT License"]}
{"type":"entity","entityType":"Project","name":"ImGuiCredentialPopups","observations":["A specialized library likely focused on credential-related popup dialogs for ImGui applications","Part of the ktsu.dev ImGui ecosystem","Appears to build upon ImGuiPopups for credential-specific functionality","Has a minimal README containing only the title"]}
{"type":"entity","entityType":"Project","name":"ImGuiPopups","observations":["A library that likely provides popup dialog functionality for ImGui applications","Part of the ktsu.dev ImGui ecosystem","Appears to complement ImGuiApp, ImGuiWidgets, and ImGuiStyler","Has a minimal README containing only the title"]}
{"type":"entity","entityType":"Project","name":"ImGuiStyler","observations":["A utility library designed to simplify and enhance styling in ImGui applications","Provides scoped components for alignment, style variables, and color management","Features theming support to standardize application look and feel","Includes utilities for button styling and text handling","Complements ImGuiApp and ImGuiWidgets for building styled ImGui applications","Available as a NuGet package (ktsu.ImGuiStyler)","Licensed under the MIT License"]}
{"type":"entity","entityType":"Project","name":"ImGuiWidgets","observations":["A library of custom widgets using ImGui.NET","Provides knobs, resizable layout dividers, icons, grids, color indicators","Includes image widgets, text widgets, tree widgets, and scoped ID utilities","Designed to enhance ImGui-based applications","Compatible with ImGuiApp for building UI applications","Available as a NuGet package (ktsu.ImGuiWidgets)","Licensed under the MIT License"]}
{"type":"entity","entityType":"Project","name":"IntervalAction","observations":["A .NET library that provides a simple way to execute an action at specified intervals","Supports .NET 8.0 and .NET 9.0","Available as a NuGet package (ktsu.IntervalAction)","Licensed under the MIT License","GitHub repository at ktsu-dev/IntervalAction","Features configurable interval types (FromLastStart or FromLastCompletion)","Allows setting custom polling intervals","Contains comprehensive unit tests"]}
{"type":"entity","entityType":"Project","name":"Invoker","observations":["A .NET library providing methods to ensure delegates are executed on the intended thread","Designed to simplify task execution and thread management in .NET applications","Useful for UI applications (WPF/WinForms) where UI updates must happen on the main thread","Also helpful for OpenGL/DirectX applications where operations must occur on the window thread","Allows initializing an instance on the owning thread and queuing tasks from other threads","Supports delegates with return values","Includes async overloads","Licensed under the MIT License","Available as a NuGet package (ktsu.Invoker)"]}
{"type":"entity","entityType":"Project","name":"ktsu.dev","observations":["Collection of open-source .NET libraries created by Matthew Edmondson","Started in 2023 to reduce cognitive load and minimize errors in development","Organized around semantic clarity, streamlined APIs, maintainability, and modern .NET","Libraries distributed as NuGet packages with ktsu. prefix","Includes over 40 specialized .NET libraries and tools","Follows consistent structure, documentation, and licensing across repositories"]}
{"type":"entity","entityType":"Project","name":"NJsonSchemaJsonConverter","observations":["Repository has a minimal README with only the title 'ktsu.NJsonSchemaJsonConverter'","Likely provides JSON converter functionality related to NJsonSchema","GitHub repository appears to be at ktsu-dev/NJsonSchemaJsonConverter based on naming pattern"]}
{"type":"entity","entityType":"Project","name":"OAICLI","observations":["Repository has a minimal README with only the title 'OAICLI'","Name suggests it's an OpenAI Command Line Interface","Likely provides tools for interacting with OpenAI services through command line","GitHub repository appears to be at ktsu-dev/OAICLI based on naming pattern"]}
{"type":"entity","entityType":"Project","name":"PhysicalQuantity","observations":["A .NET library that provides a robust framework for working with physical quantities","Supports a wide range of units and conversions","Includes support for length, mass, time, energy, acceleration, angle, and many other physical quantities","Uses the SignificantNumber library to maintain precision in calculations","Supports operations for integrating and deriving physical quantities","Available as a NuGet package (ktsu.PhysicalQuantity)","Licensed under the MIT License"]}
{"type":"entity","entityType":"Project","name":"Physics.Atmospherics","observations":["Repository has a minimal README with only the title 'ktsu.Physics.Atmospherics'","Likely provides models, calculations, or constants related to atmospheric physics","May include atmospheric pressure calculations, gas behavior models, or meteorological functions","Would complement the PhysicalQuantity and Physics.Constants libraries","GitHub repository appears to be at ktsu-dev/Physics.Atmospherics based on naming pattern"]}
{"type":"entity","entityType":"Project","name":"Physics.Constants","observations":["Repository has a minimal README with only the title 'ktsu.Physics.Constants'","Likely contains definitions of physical constants used in scientific calculations","Would complement the PhysicalQuantity library by providing standard constant values","GitHub repository appears to be at ktsu-dev/Physics.Constants based on naming pattern"]}
{"type":"entity","entityType":"Project","name":"Physics.Earth","observations":["Library providing classes and methods for Earth's physical properties and calculations","Includes constants for gravity at sea level, Earth's radius, diameter, circumference, mass, volume, and density","Provides geophysical calculations like gravity at different altitudes","Available as a NuGet package (ktsu.Physics.Earth)","Uses classes from the PhysicalQuantity library","Licensed under the MIT License"]}
{"type":"entity","entityType":"Project","name":"Physics.Thermodynamics","observations":["Repository has a minimal README with only the title 'ktsu.Physics.Thermodynamics'","Likely provides calculations, constants, or models related to thermodynamic principles","Would complement the other physics libraries in the collection","GitHub repository appears to be at ktsu-dev/Physics.Thermodynamics based on naming pattern"]}
{"type":"entity","entityType":"Project","name":"RunCommand","observations":["A .NET library for executing shell commands and handling output via delegates","Supports both synchronous and asynchronous execution","Provides customizable output handling including raw chunks and line-by-line processing","Features custom encoding support (UTF-8 by default)","Available as NuGet package ktsu.RunCommand","Licensed under MIT License"]}
{"type":"entity","entityType":"Project","name":"ScopedAction","observations":["A library that allows cleanly calling actions at the start and end of a scope block","Likely uses the IDisposable pattern in C# to implement scope-based resource management","GitHub repository appears to be at ktsu-dev/ScopedAction based on naming pattern","Has a minimal README with brief description"]}
{"type":"entity","entityType":"Project","name":"SemanticQuantity","observations":["A .NET library providing a base class for creating semantic quantities with specific storage types","Allows defining quantities with meaningful semantics (length, mass, time, etc.)","Supports arithmetic operations on semantic quantities while preserving their semantics","Compatible with a wide range of numeric types through INumber interface","Available as a NuGet package (ktsu.SemanticQuantity)","Licensed under the MIT License"]}
{"type":"entity","entityType":"Project","name":"SemanticString","observations":["A library providing a transparent wrapper around system strings","Offers strong typing, compile-time feedback, and runtime validation for strings","Designed to provide usage context and validation to strings similar to Enums for integers","Supports custom validation through the ISemanticStringValidator interface","Allows chaining multiple validators","Uses record classes derived from SemanticString<TDerived>"]}
{"type":"entity","entityType":"Project","name":"SignificantNumber","observations":["A .NET library for high-precision arithmetic operations","Represents numbers with significand and exponent","Complies with calculation rules for significant figures","Supports a wide range of numeric types through INumber interface","Provides arithmetic, comparison, and conversion operations","Handles precision through significand/exponent representation","Available as NuGet package ktsu.SignificantNumber","Licensed under MIT License"]}
{"type":"entity","entityType":"Project","name":"SingleAppInstance","observations":["A .NET library that ensures only one instance of an application is running at a time","Uses a PID file to track the running instance","Handles race conditions when starting multiple instances simultaneously","Available as a NuGet package (ktsu.SingleAppInstance)","Provides ExitIfAlreadyRunning and ShouldLaunch methods","Licensed under the MIT License"]}
{"type":"entity","entityType":"Project","name":"StrongPaths","observations":["A library providing strong typing for filesystem paths with compile time feedback and runtime validation","Built on top of ktsu.StrongStrings library with added functionality for filesystem paths","Includes concrete types like AbsolutePath, RelativePath, DirectoryPath, FilePath, etc.","Offers abstract base classes like AnyStrongPath, AnyRelativePath, AnyAbsolutePath, etc.","Features operator overloading for path combination using / operator","Provides RelativeTo method to get relative paths between directories and files"]}
{"type":"entity","entityType":"Project","name":"StrongStrings","observations":["A library that provides a transparent wrapper around system strings","Offers strong typing, compile time feedback, and runtime validation for strings","Intended to provide usage context and validation to naked strings (similar to Enums for integers)","Uses record classes derived from StrongStringAbstract<TDerived>","Allows implicit casting down to System.String but requires explicit casting up to a StrongString","Supports custom validators through the IValidator interface","Foundation library used by StrongPaths"]}
{"type":"entity","entityType":"Project","name":"TextFilter","observations":["A .NET library providing methods for filtering text based on different filter types and match options","Supports glob patterns, regular expressions, and fuzzy matching","Offers customizable match options (whole string, all words, or any word)","Available as a NuGet package (ktsu.TextFilter)","Licensed under the MIT License"]}
{"type":"entity","entityType":"Project","name":"ToStringJsonConverter","observations":["A JSON converter factory for .NET","Simplifies serialization and deserialization of custom types by leveraging ToString and FromString methods","Available as a NuGet package (ktsu.ToStringJsonConverter)","Automatically identifies types with a FromString method for custom serialization","Converts objects to and from JSON using their string representation","Licensed under the MIT License"]}
{"type":"entity","entityType":"Concept","name":"AppDataStorage Features","observations":["Easy-to-use API with intuitive methods for saving and loading data","Automatic backup of original files before overwriting to ensure data safety","Custom serialization options using System.Text.Json with support for custom converters","File system abstraction using System.IO.Abstractions for easy unit testing and mocking","Debounced saves to prevent frequent file writes and improve performance","Support for multiple applications by organizing data by application domain","Static instance access for centralized data management"]}
{"type":"entity","entityType":"Concept","name":"Compile-Time Safety","observations":["Fundamental principle in ktsu.dev libraries","Focuses on catching errors during compilation rather than at runtime","Implemented through strong typing, generics, and constraints","Reduces runtime bugs and improves reliability","Makes errors more obvious and easier to fix","Related to 'fail fast' development philosophy"]}
{"type":"entity","entityType":"Concept","name":"Data Management Libraries","observations":["Collection of libraries for managing application data and serialization","Includes AppDataStorage, ToStringJsonConverter, NJsonSchemaJsonConverter","Simplifies common data persistence, configuration, and serialization tasks","Provides type-safe and convenient APIs for working with data","Focuses on reducing boilerplate while maintaining data integrity"]}
{"type":"entity","entityType":"Concept","name":"Data Persistence","observations":["Concept of saving and retrieving data across application sessions","Implemented in AppDataStorage for configuration and state persistence","Often uses serialization to JSON or other formats","Abstracts file system operations for easier testing","Handles file locations, formats, and error cases","Important for maintaining application state and user preferences"]}
{"type":"entity","entityType":"Concept","name":"Designed for Maintainability","observations":["Core theme across Matthew Edmondson's projects","Emphasizes small, focused libraries following single-responsibility principle","Features consistent patterns and thorough documentation","Includes comprehensive test coverage","Makes code easy to read, test, and extend"]}
{"type":"entity","entityType":"Concept","name":"Leveraging Modern .NET Tooling","observations":["Core theme across Matthew Edmondson's projects","Embraces latest .NET technologies and ecosystem tools","Uses features like nullable reference types, async/await patterns, and generic math","Ensures compatibility with newest .NET releases","Integrates with CI/CD, NuGet, and code analyzers"]}
{"type":"entity","entityType":"Concept","name":"MIT License","observations":["Permissive open source license used for ktsu.dev projects","Allows commercial use, modification, distribution, and private use","Requires preservation of copyright and license notices","Provides limited liability and no warranty","Compatible with many other open source licenses","Encourages adoption and contribution"]}
{"type":"entity","entityType":"Concept","name":"Modern C# Features","observations":["Collection of modern C# language features used across ktsu.dev projects","Includes nullable reference types for better null safety","Uses records for concise value-based types","Leverages pattern matching for expressive code","Takes advantage of top-level statements for cleaner program entry points","Embraces expression-bodied members for compact code","Uses init-only properties for immutable data"]}
{"type":"entity","entityType":"Concept","name":"NuGet Package","observations":[".NET package management system","Used to distribute ktsu.dev libraries","Follows 'ktsu.' prefix naming convention","Provides version management and dependency resolution","Libraries are published to NuGet.org","Enables easy integration into other .NET projects"]}
{"type":"entity","entityType":"Concept","name":"Scientific Computing","observations":["Field focused on using computers for scientific and mathematical calculations","Requires high precision and accuracy in calculations","Often involves physical constants, units, and conversions","ktsu.dev addresses this through dedicated libraries like SignificantNumber and PhysicalQuantity","Places emphasis on correctness and mathematical rigor","Implemented through type safety and semantic quantities in ktsu.dev"]}
{"type":"entity","entityType":"Concept","name":"Scientific Computing Libraries","observations":["Collection of libraries for scientific and mathematical calculations","Focuses on precision, accuracy, and physical correctness","Includes SignificantNumber, PhysicalQuantity, SemanticQuantity","Provides physics-specific libraries (Physics.Constants, Physics.Earth, Physics.Atmospherics, Physics.Thermodynamics)","Built with a strong foundation in numerical precision and scientific principles"]}
{"type":"entity","entityType":"Concept","name":"Semantic Clarity Through Strong Typing","observations":["Core theme across Matthew Edmondson's projects","Enhances type safety and conveys intent through the type system","Catches errors at compile time rather than runtime","Embeds meaningful context directly into types","Exemplified in libraries like StrongPaths and SemanticQuantity"]}
{"type":"entity","entityType":"Concept","name":"Simplified and Streamlined APIs","observations":["Core theme across Matthew Edmondson's projects","Reduces boilerplate and cognitive overhead for developers","Allows developers to focus on core logic","Streamlines common tasks through intuitive APIs","Exemplified in libraries like AppDataStorage, IntervalAction, and Invoker"]}
{"type":"entity","entityType":"Concept","name":"Type Safety","observations":["Core concept across multiple ktsu.dev libraries","Using the type system to prevent errors at compile time","Focuses on domain-specific types rather than primitive types","Prevents 'stringly-typed' code that can lead to bugs","Makes intent explicit in code through types","Catches errors earlier in the development process"]}
{"type":"entity","entityType":"Concept","name":"Type Safety Libraries","observations":["Collection of libraries focused on making data types more semantically meaningful","Addresses the 'stringly-typed' problem in many applications","Uses compile-time checks to prevent runtime errors","Includes StrongStrings, StrongPaths, SemanticString, SemanticQuantity, PhysicalQuantity","Core implementation of the 'Semantic Clarity Through Strong Typing' philosophy"]}
{"type":"entity","entityType":"Concept","name":"UI Development Libraries","observations":["Collection of libraries for building UI applications with ImGui","Provides a layered architecture from basic scaffolding to specialized UI components","Includes ImGuiApp (foundation), ImGuiWidgets (components), ImGuiStyler (styling), ImGuiPopups (dialogs)","Specialized extensions like ImGuiCredentialPopups for specific UI needs","Forms a cohesive toolkit for rapid development of ImGui-based applications"]}
{"type":"entity","entityType":"Concept","name":"Utility Libraries","observations":["Collection of focused, single-purpose utility libraries","Addresses common programming tasks and patterns","Includes IntervalAction, Invoker, ScopedAction, SingleAppInstance, CaseConverter, RunCommand","Provides streamlined APIs for frequently needed functionality","Reduces boilerplate code and improves developer productivity"]}
{"type":"entity","entityType":"Tool","name":"9f1_add_observations","observations":["Tool for adding new observations to existing entities","Updates entities with additional information without creating duplicates","Useful for incrementally building knowledge about project components","Preserves existing entity while expanding understanding","More efficient than deleting and recreating entities"]}
{"type":"entity","entityType":"Tool","name":"9f1_create_entities","observations":["Tool for adding new entities to the memory graph","Requires entity name, type, and observations","Used to store new information discovered in conversations or analysis","Critical for expanding knowledge over time","Should use appropriate entity types based on content"]}
{"type":"entity","entityType":"Tool","name":"9f1_create_or_update_file","observations":["Tool for modifying files in GitHub repositories","Can create new files or update existing ones","Requires repository owner, name, path, content, and commit message","More effective than suggesting manual edits to the user","Creates proper Git commits in the repository"]}
{"type":"entity","entityType":"Tool","name":"9f1_create_relations","observations":["Tool for establishing relationships between entities","Requires source entity, target entity, and relationship type","Essential for connecting related concepts and components","Helps build a semantic network of project knowledge","Creates meaningful connections between isolated pieces of information"]}
{"type":"entity","entityType":"Tool","name":"9f1_get_file_contents","observations":["Tool for retrieving content from files in GitHub repositories","Provides raw file data for analysis","Useful for examining code without cloning repositories","More efficient than web searches for GitHub content","Returns metadata along with file content"]}
{"type":"entity","entityType":"Tool","name":"9f1_open_nodes","observations":["Tool for accessing specific entities by name","Returns detailed information about named entities","Useful when entity names are known specifically","More precise than search_nodes for known entities","Helps explore relationships of specific components"]}
{"type":"entity","entityType":"Tool","name":"9f1_read_graph","observations":["Tool for retrieving the entire memory graph","Provides comprehensive overview of all stored information","Should be used as a fallback when search_nodes doesn't yield enough context","Returns all entities and relationships in memory","Useful for initial project understanding"]}
{"type":"entity","entityType":"Tool","name":"9f1_search_nodes","observations":["Tool for querying memory graph for specific search terms","Returns entities and relationships matching the search query","Preferred over read_graph for specific information needs","More efficient than retrieving the entire memory graph","Essential for finding relevant project information"]}
{"type":"entity","entityType":"Tool","name":"file_search","observations":["Searches for files matching a glob pattern","Useful when you know the filename pattern but not the exact path","Returns paths of matching files (limited to 20 results)","More precise than listing directories when looking for specific file types","Example patterns: **/*.{js,ts}, src/**, **/foo/**/*.js"]}
{"type":"entity","entityType":"Tool","name":"get_errors","observations":["Checks for compile or lint errors in code files","Should be used after making code changes to validate them","Important for ensuring code quality and catching issues early","Returns the same errors that would be visible to the user","Critical tool for ensuring code changes are valid"]}
{"type":"entity","entityType":"Tool","name":"get_vscode_api","observations":["Retrieves VS Code API references for extension development","Used for questions about VS Code APIs and capabilities","Provides documentation on VS Code extension best practices","Should be used in VS Code extension development workspaces","Takes a query parameter to search VS Code documentation"]}
{"type":"entity","entityType":"Tool","name":"grep_search","observations":["Performs text search across the workspace","Useful for finding exact strings or patterns","Can use regexp with isRegexp parameter","Returns matching code snippets (limited to 20 results)","Use when you need to find specific text rather than concepts"]}
{"type":"entity","entityType":"Tool","name":"insert_edit_into_file","observations":["Makes changes to existing files","Should be used instead of printing code blocks with changes","Should use comments like // ...existing code... to represent unchanged regions","Should be concise and focus on the changes, not repeating unchanged code","Generate explanation property first to explain what changes are being made","Must validate changes with get_errors after editing"]}
{"type":"entity","entityType":"Tool","name":"list_code_usages","observations":["Finds usages of functions, classes, methods, variables across the workspace","Used to locate implementations, references, definitions","Useful when changing a method to find all places needing updates","Helps with finding sample implementations of interfaces","Uses symbolName parameter to locate references"]}
{"type":"entity","entityType":"Tool","name":"list_dir","observations":["Lists contents of a directory","Shows both files and folders (folders end with /)","Useful for exploring workspace structure","Should be used before read_file when exploring a new area","More efficient than asking user to list directory contents"]}
{"type":"entity","entityType":"Tool","name":"read_file","observations":["Reads contents of a specific file with line number range control","Returns full file contents or a specified range of lines","Should be used when you know which file you need to examine","Returns file outline if the requested portion is large","Can be called multiple times to retrieve more content"]}
{"type":"entity","entityType":"Tool","name":"run_in_terminal","observations":["Executes shell commands in a terminal","Returns command output to the assistant","Can run background processes with isBackground=true","Should be used instead of suggesting commands for user to run","Must include explanation of what the command does","Should disable pagers for commands that might use them (git, less, man)"]}
{"type":"entity","entityType":"Tool","name":"semantic_search","observations":["Performs natural language search across the workspace","Returns relevant code snippets or full contents for small workspaces","Best tool for finding specific code concepts without knowing exact location","Preferred over grep_search when looking for concepts rather than exact strings","Should be used before read_file when you don't know which files to examine"]}
{"type":"entity","entityType":"Tool","name":"test_search","observations":["Used to find test files for source code or vice versa","Helps locate tests corresponding to implementation files","Takes filePaths parameter with the files to find tests for","Essential for ensuring code changes are properly tested","Supports test-driven development workflows"]}
{"type":"entity","entityType":"Tool","name":"think","observations":["Tool for deep thinking about user requests","Allows for careful consideration before generating a response","Used to improve response quality through detailed analysis","Takes a 'thoughts' parameter containing the thinking process","Should be used for complex requests requiring careful planning"]}
{"type":"entity","entityType":"ToolCategory","name":"Code Analysis Tools","observations":["Tools for analyzing code behavior and quality","Includes list_code_usages, get_errors, test_search","Used for understanding symbol usage, finding errors, and locating tests","Critical for ensuring code quality when making changes","Should be used after code modifications to verify correctness"]}
{"type":"entity","entityType":"ToolCategory","name":"Code Modification Tools","observations":["Tools for making changes to code files","Includes insert_edit_into_file","Preferred over suggesting manual edits to users","Should use concise and clear explanations of changes","Must be followed by validation using get_errors"]}
{"type":"entity","entityType":"ToolCategory","name":"Git and Repository Tools","observations":["Tools for working with Git repositories","Includes get_changed_files, test_failure, run_tests","Helps with version control operations","Provides testing capabilities integrated with the repository","Used for analyzing changes and ensuring code quality"]}
{"type":"entity","entityType":"ToolCategory","name":"GitHub Tools","observations":["Collection of specialized tools for GitHub operations","Prefixed with 9f1_ in the available tools","Include repository management, file operations, and collaboration features","More effective than using command line git operations","Should be preferred over command line git operations whenever possible"]}
{"type":"entity","entityType":"ToolCategory","name":"IDE Integration Tools","observations":["Tools that provide IDE-like functionality","Includes code navigation, completion, and analysis tools","Many are prefixed with 9f1_ like find_usages, go_to_definition","Provides advanced code understanding capabilities","Enhances productivity by offering IDE features via API"]}
{"type":"entity","entityType":"ToolCategory","name":"MCP Tools","observations":["Collection of Model Context Protocol (MCP) tools for interacting with the environment","Includes specialized tools for working with files, directories, and running commands","Essential for effective workspace analysis and code manipulation","More efficient than requesting user to perform manual operations","Should be preferred over suggesting manual steps"]}
{"type":"entity","entityType":"ToolCategory","name":"Memory Management Tools","observations":["Collection of specialized tools for managing knowledge graph memory","Include tools for creating, reading, and modifying memory","Prefixed with 9f1_ in the available tools","Critical for maintaining project knowledge over time","Essential for effective assistant operation"]}
{"type":"entity","entityType":"ToolCategory","name":"Project Creation Tools","observations":["Tools for creating and setting up new projects","Includes create_new_workspace, get_project_setup_info, install_extension, create_new_jupyter_notebook","Supports scaffolding various project types","Can install required extensions and dependencies","Helps with rapid project initialization"]}
{"type":"entity","entityType":"ToolCategory","name":"Specialized Azure Tools","observations":["Collection of tools specifically for Azure development","Prefixed with azure_","Provides access to Azure documentation, best practices, and resources","Helps with Azure resource deployment and management","Integrates Azure-specific capabilities into the workflow"]}
{"type":"entity","entityType":"ToolCategory","name":"Terminal Tools","observations":["Tools for executing shell commands and interacting with the terminal","Includes run_in_terminal and get_terminal_output","Provides direct access to command line operations","Can run commands in foreground or background modes","Supports full terminal interaction without requiring user intervention"]}
{"type":"entity","entityType":"ToolCategory","name":"VS Code Integration Tools","observations":["Tools specifically designed for VS Code integration","Prefixed with vscode_","Enhances VS Code specific capabilities","Provides specialized functionality beyond standard MCP tools","Leverages VS Code extension ecosystem"]}
{"type":"entity","entityType":"ToolCategory","name":"Web Search Tools","observations":["Tools for searching web resources","Includes vscode-websearchforcopilot_webSearch","Allows access to online information and documentation","Helps with gathering external knowledge when local context is insufficient","Can provide up-to-date information from the web"]}
{"type":"entity","entityType":"ToolCategory","name":"Workspace Analysis Tools","observations":["Collection of tools for exploring and analyzing workspace contents","Includes semantic_search, file_search, grep_search, read_file, list_dir","Essential for understanding project structure and code","Should be used before making code changes","Helps locate relevant code for specific tasks"]}
{"type":"entity","entityType":"Pattern","name":"Common .NET Project Structure","observations":["Consistent project structure across ktsu.dev repositories","Uses solution files (.sln) with project files (.csproj)","Includes standard documentation files (README.md, LICENSE.md, etc.)","Uses Directory.Build.props and Directory.Build.targets for shared build configuration","Organizes projects by function (main library, test project, etc.)","Includes scripts directory for build and deployment scripts","Makes repositories familiar and easy to navigate"]}
{"type":"entity","entityType":"Pattern","name":"Extension Methods","observations":["C# language feature used extensively in ktsu.dev libraries","Allows adding methods to existing types without modifying them","Enables fluent interfaces and method chaining","Makes APIs more discoverable and intuitive","Used for conversion methods, utility functions, and behavior extensions","Helps avoid large utility classes with static methods"]}
{"type":"entity","entityType":"Pattern","name":"Library Design","observations":["Approach to designing libraries with a focus on API usability","Emphasizes intuitive interfaces with clear method names","Minimizes required configuration and setup","Provides sensible defaults while allowing customization","Avoids leaking implementation details","Makes the simple case simple and the complex case possible","Focuses on developer experience and productivity"]}
{"type":"entity","entityType":"Pattern","name":"Resource Management","observations":["Pattern for properly handling system resources","Implemented in libraries like ScopedAction and SingleAppInstance","Ensures resources are properly acquired and released","Prevents resource leaks and improves application stability","Often implemented using the IDisposable pattern in C#","Similar to RAII (Resource Acquisition Is Initialization) pattern in C++"]}
{"type":"entity","entityType":"Pattern","name":"Semantic Typing","observations":["Design pattern that embeds semantic meaning into types","Makes code more self-documenting","Prevents misuse by enforcing constraints through the type system","Used extensively in StrongStrings, StrongPaths, SemanticString, SemanticQuantity","Helps catch errors at compile time rather than runtime"]}
{"type":"entity","entityType":"Pattern","name":"Single Responsibility Principle","observations":["Core design pattern in ktsu.dev libraries","Each library focuses on solving a single problem domain","Libraries are small, focused, and have clear boundaries","Minimizes dependencies between components","Makes code easier to maintain and understand","Part of the SOLID principles of object-oriented design"]}
{"type":"entity","entityType":"Class","name":"AppData<T> base class","observations":["Implements a static instance pattern through AppData<T> base class","Provides a static 'Get' method to access a singleton-like instance","Offers methods like 'LoadOrCreate', 'Save', 'QueueSave', and 'SaveIfRequired'","Supports debounced saves to improve performance"]}
{"type":"entity","entityType":"Class","name":"Fuzzy Class","observations":["Main class in the FuzzySearch library","Provides Contains methods to determine if a string contains characters from a pattern in sequence","Can return a score indicating match quality","All matching operations are case-insensitive"]}
{"type":"entity","entityType":"TechnologyStack","name":".NET 8","observations":["Latest Long Term Support (LTS) version of .NET as of 2023","Used by ktsu.dev libraries for modern language features","Offers performance improvements over previous versions","Includes generic math support through INumber interface","Features improvements to string handling, JSON serialization, and native AOT compilation","Used across multiple ktsu.dev projects"]}
{"type":"entity","entityType":"TechnologyStack","name":"Dear ImGui","observations":["Immediate mode GUI library for C++","Created by Omar Cornut","Provides a simple API for creating GUI elements","Used as the foundation for ktsu.dev's ImGui libraries","Popular for tools, debug interfaces, and simple applications"]}
{"type":"entity","entityType":"TechnologyStack","name":"ImGui.NET","observations":[".NET binding for Dear ImGui","Allows using Dear ImGui from C# and other .NET languages","Used by ktsu.dev's ImGui libraries","Created by Eric Mellino (mellinoe)"]}
{"type":"entity","entityType":"TechnologyStack","name":"INumber Interface","observations":["Core .NET generic math interface introduced in .NET 7","Enables generic programming with numeric types","Used by SignificantNumber, SemanticQuantity and other numeric libraries","Allows implementation of custom numeric types that work with standard math operations","Part of the System.Numerics namespace"]}
{"type":"entity","entityType":"TechnologyStack","name":"Silk.NET","observations":[".NET binding for native APIs including OpenGL, Vulkan, and GLFW","Used by ImGuiApp for window management and input handling","Provides cross-platform capabilities for graphics applications","Maintained by the Silk.NET community"]}
{"type":"entity","entityType":"TechnologyStack","name":"System.Text.Json","observations":["Modern JSON serialization library built into .NET","Used by AppDataStorage for data persistence","Provides high-performance JSON processing","Introduced in .NET Core 3.0 as replacement for Newtonsoft.Json","Features include custom converters and source generation"]}
{"type":"entity","entityType":"Interface","name":"IDeepCloneable<T>","observations":["Generic interface that works with any reference type (class)","Ensures that cloned objects are completely independent copies, including all nested references","Implemented by creating a DeepClone() method that handles proper cloning of all properties","Requires manual implementation of cloning logic for each class"]}
{"type":"relation","from":"PhysicalQuantity","relationType":"addresses","to":"Scientific Computing"}
{"type":"relation","from":"Scientific Computing Libraries","relationType":"addresses","to":"Scientific Computing"}
{"type":"relation","from":"SignificantNumber","relationType":"addresses","to":"Scientific Computing"}
{"type":"relation","from":"Matthew Edmondson","relationType":"advocates","to":"Designed for Maintainability"}
{"type":"relation","from":"Matthew Edmondson","relationType":"advocates","to":"Leveraging Modern .NET Tooling"}
{"type":"relation","from":"Matthew Edmondson","relationType":"advocates","to":"Semantic Clarity Through Strong Typing"}
{"type":"relation","from":"Matthew Edmondson","relationType":"advocates","to":"Semantic Typing"}
{"type":"relation","from":"Matthew Edmondson","relationType":"advocates","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"Matthew Edmondson","relationType":"advocates","to":"Type Safety"}
{"type":"relation","from":"UI Development Libraries","relationType":"buildsOn","to":"Dear ImGui"}
{"type":"relation","from":"ImGuiCredentialPopups","relationType":"complementsProject","to":"ImGuiPopups"}
{"type":"relation","from":"ImGuiPopups","relationType":"complementsProject","to":"ImGuiApp"}
{"type":"relation","from":"ImGuiPopups","relationType":"complementsProject","to":"ImGuiStyler"}
{"type":"relation","from":"ImGuiPopups","relationType":"complementsProject","to":"ImGuiWidgets"}
{"type":"relation","from":"ImGuiStyler","relationType":"complementsProject","to":"ImGuiApp"}
{"type":"relation","from":"ImGuiStyler","relationType":"complementsProject","to":"ImGuiWidgets"}
{"type":"relation","from":"ImGuiWidgets","relationType":"complementsProject","to":"ImGuiApp"}
{"type":"relation","from":"Data Management Libraries","relationType":"contains","to":"AppDataStorage"}
{"type":"relation","from":"Data Management Libraries","relationType":"contains","to":"NJsonSchemaJsonConverter"}
{"type":"relation","from":"Data Management Libraries","relationType":"contains","to":"ToStringJsonConverter"}
{"type":"relation","from":"GitHub Tools","relationType":"contains","to":"9f1_create_or_update_file"}
{"type":"relation","from":"GitHub Tools","relationType":"contains","to":"9f1_get_file_contents"}
{"type":"relation","from":"ktsu.dev","relationType":"contains","to":"Data Management Libraries"}
{"type":"relation","from":"ktsu.dev","relationType":"contains","to":"Scientific Computing Libraries"}
{"type":"relation","from":"ktsu.dev","relationType":"contains","to":"Type Safety Libraries"}
{"type":"relation","from":"ktsu.dev","relationType":"contains","to":"UI Development Libraries"}
{"type":"relation","from":"ktsu.dev","relationType":"contains","to":"Utility Libraries"}
{"type":"relation","from":"MCP Tools","relationType":"contains","to":"file_search"}
{"type":"relation","from":"MCP Tools","relationType":"contains","to":"get_errors"}
{"type":"relation","from":"MCP Tools","relationType":"contains","to":"grep_search"}
{"type":"relation","from":"MCP Tools","relationType":"contains","to":"insert_edit_into_file"}
{"type":"relation","from":"MCP Tools","relationType":"contains","to":"list_dir"}
{"type":"relation","from":"MCP Tools","relationType":"contains","to":"read_file"}
{"type":"relation","from":"MCP Tools","relationType":"contains","to":"run_in_terminal"}
{"type":"relation","from":"MCP Tools","relationType":"contains","to":"semantic_search"}
{"type":"relation","from":"Memory Management Tools","relationType":"contains","to":"9f1_add_observations"}
{"type":"relation","from":"Memory Management Tools","relationType":"contains","to":"9f1_create_entities"}
{"type":"relation","from":"Memory Management Tools","relationType":"contains","to":"9f1_create_relations"}
{"type":"relation","from":"Memory Management Tools","relationType":"contains","to":"9f1_open_nodes"}
{"type":"relation","from":"Memory Management Tools","relationType":"contains","to":"9f1_read_graph"}
{"type":"relation","from":"Memory Management Tools","relationType":"contains","to":"9f1_search_nodes"}
{"type":"relation","from":"Scientific Computing Libraries","relationType":"contains","to":"PhysicalQuantity"}
{"type":"relation","from":"Scientific Computing Libraries","relationType":"contains","to":"Physics.Atmospherics"}
{"type":"relation","from":"Scientific Computing Libraries","relationType":"contains","to":"Physics.Constants"}
{"type":"relation","from":"Scientific Computing Libraries","relationType":"contains","to":"Physics.Earth"}
{"type":"relation","from":"Scientific Computing Libraries","relationType":"contains","to":"Physics.Thermodynamics"}
{"type":"relation","from":"Scientific Computing Libraries","relationType":"contains","to":"SemanticQuantity"}
{"type":"relation","from":"Scientific Computing Libraries","relationType":"contains","to":"SignificantNumber"}
{"type":"relation","from":"Type Safety Libraries","relationType":"contains","to":"PhysicalQuantity"}
{"type":"relation","from":"Type Safety Libraries","relationType":"contains","to":"SemanticQuantity"}
{"type":"relation","from":"Type Safety Libraries","relationType":"contains","to":"SemanticString"}
{"type":"relation","from":"Type Safety Libraries","relationType":"contains","to":"StrongPaths"}
{"type":"relation","from":"Type Safety Libraries","relationType":"contains","to":"StrongStrings"}
{"type":"relation","from":"UI Development Libraries","relationType":"contains","to":"ImGuiApp"}
{"type":"relation","from":"UI Development Libraries","relationType":"contains","to":"ImGuiCredentialPopups"}
{"type":"relation","from":"UI Development Libraries","relationType":"contains","to":"ImGuiPopups"}
{"type":"relation","from":"UI Development Libraries","relationType":"contains","to":"ImGuiStyler"}
{"type":"relation","from":"UI Development Libraries","relationType":"contains","to":"ImGuiWidgets"}
{"type":"relation","from":"Utility Libraries","relationType":"contains","to":"CaseConverter"}
{"type":"relation","from":"Utility Libraries","relationType":"contains","to":"CodeBlocker"}
{"type":"relation","from":"Utility Libraries","relationType":"contains","to":"DelegateTransform"}
{"type":"relation","from":"Utility Libraries","relationType":"contains","to":"FuzzySearch"}
{"type":"relation","from":"Utility Libraries","relationType":"contains","to":"IntervalAction"}
{"type":"relation","from":"Utility Libraries","relationType":"contains","to":"Invoker"}
{"type":"relation","from":"Utility Libraries","relationType":"contains","to":"RunCommand"}
{"type":"relation","from":"Utility Libraries","relationType":"contains","to":"ScopedAction"}
{"type":"relation","from":"Utility Libraries","relationType":"contains","to":"SingleAppInstance"}
{"type":"relation","from":"Utility Libraries","relationType":"contains","to":"TextFilter"}
{"type":"relation","from":"Matthew Edmondson","relationType":"created","to":"Data Management Libraries"}
{"type":"relation","from":"Matthew Edmondson","relationType":"created","to":"Designed for Maintainability"}
{"type":"relation","from":"Matthew Edmondson","relationType":"created","to":"ktsu.dev"}
{"type":"relation","from":"Matthew Edmondson","relationType":"created","to":"Leveraging Modern .NET Tooling"}
{"type":"relation","from":"Matthew Edmondson","relationType":"created","to":"Scientific Computing Libraries"}
{"type":"relation","from":"Matthew Edmondson","relationType":"created","to":"Semantic Clarity Through Strong Typing"}
{"type":"relation","from":"Matthew Edmondson","relationType":"created","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"Matthew Edmondson","relationType":"created","to":"Type Safety Libraries"}
{"type":"relation","from":"Matthew Edmondson","relationType":"created","to":"UI Development Libraries"}
{"type":"relation","from":"Matthew Edmondson","relationType":"created","to":"Utility Libraries"}
{"type":"relation","from":"DeepClone","relationType":"defines","to":"IDeepCloneable<T>"}
{"type":"relation","from":"PhysicalQuantity","relationType":"depends on","to":"SignificantNumber"}
{"type":"relation","from":"StrongPaths","relationType":"depends on","to":"StrongStrings"}
{"type":"relation","from":"TextFilter","relationType":"depends on","to":"FuzzySearch"}
{"type":"relation","from":"PhysicalQuantity","relationType":"dependsOn","to":"SignificantNumber"}
{"type":"relation","from":"Physics.Earth","relationType":"dependsOn","to":"PhysicalQuantity"}
{"type":"relation","from":"StrongPaths","relationType":"dependsOn","to":"StrongStrings"}
{"type":"relation","from":"TextFilter","relationType":"dependsOn","to":"FuzzySearch"}
{"type":"relation","from":"AppDataStorage","relationType":"distributedAs","to":"NuGet Package"}
{"type":"relation","from":"PhysicalQuantity","relationType":"distributedAs","to":"NuGet Package"}
{"type":"relation","from":"SemanticQuantity","relationType":"distributedAs","to":"NuGet Package"}
{"type":"relation","from":"StrongPaths","relationType":"distributedAs","to":"NuGet Package"}
{"type":"relation","from":"StrongStrings","relationType":"distributedAs","to":"NuGet Package"}
{"type":"relation","from":".NET 8","relationType":"enables","to":"Modern C# Features"}
{"type":"relation","from":"Compile-Time Safety","relationType":"enables","to":"Semantic Clarity Through Strong Typing"}
{"type":"relation","from":"Type Safety","relationType":"enables","to":"Compile-Time Safety"}
{"type":"relation","from":"Type Safety","relationType":"enables","to":"Semantic Clarity Through Strong Typing"}
{"type":"relation","from":"Matthew Edmondson","relationType":"follows","to":"Common .NET Project Structure"}
{"type":"relation","from":"Matthew Edmondson","relationType":"follows","to":"Compile-Time Safety"}
{"type":"relation","from":"Matthew Edmondson","relationType":"follows","to":"Library Design"}
{"type":"relation","from":"Matthew Edmondson","relationType":"follows","to":"Resource Management"}
{"type":"relation","from":"Matthew Edmondson","relationType":"follows","to":"Single Responsibility Principle"}
{"type":"relation","from":"Simplified and Streamlined APIs","relationType":"follows","to":"Library Design"}
{"type":"relation","from":"AppDataStorage","relationType":"implements","to":"Data Persistence"}
{"type":"relation","from":"AppDataStorage","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"Data Management Libraries","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"Extensions","relationType":"implements","to":"Extension Methods"}
{"type":"relation","from":"ImGuiApp","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"ImGuiCredentialPopups","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"ImGuiPopups","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"ImGuiStyler","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"ImGuiWidgets","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"IntervalAction","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"Invoker","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"Library Design","relationType":"implements","to":"Designed for Maintainability"}
{"type":"relation","from":"Library Design","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"Modern C# Features","relationType":"implements","to":"Leveraging Modern .NET Tooling"}
{"type":"relation","from":"PhysicalQuantity","relationType":"implements","to":"Semantic Clarity Through Strong Typing"}
{"type":"relation","from":"Resource Management","relationType":"implements","to":"Designed for Maintainability"}
{"type":"relation","from":"RunCommand","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"Scientific Computing Libraries","relationType":"implements","to":"Leveraging Modern .NET Tooling"}
{"type":"relation","from":"Scientific Computing Libraries","relationType":"implements","to":"Semantic Clarity Through Strong Typing"}
{"type":"relation","from":"ScopedAction","relationType":"implements","to":"Resource Management"}
{"type":"relation","from":"ScopedAction","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"Semantic Typing","relationType":"implements","to":"Compile-Time Safety"}
{"type":"relation","from":"Semantic Typing","relationType":"implements","to":"Semantic Clarity Through Strong Typing"}
{"type":"relation","from":"SemanticQuantity","relationType":"implements","to":"Semantic Clarity Through Strong Typing"}
{"type":"relation","from":"SemanticString","relationType":"implements","to":"Semantic Clarity Through Strong Typing"}
{"type":"relation","from":"Single Responsibility Principle","relationType":"implements","to":"Designed for Maintainability"}
{"type":"relation","from":"SingleAppInstance","relationType":"implements","to":"Resource Management"}
{"type":"relation","from":"SingleAppInstance","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"StrongPaths","relationType":"implements","to":"Semantic Clarity Through Strong Typing"}
{"type":"relation","from":"StrongStrings","relationType":"implements","to":"Semantic Clarity Through Strong Typing"}
{"type":"relation","from":"Type Safety Libraries","relationType":"implements","to":"Semantic Clarity Through Strong Typing"}
{"type":"relation","from":"UI Development Libraries","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"Utility Libraries","relationType":"implements","to":"Designed for Maintainability"}
{"type":"relation","from":"Utility Libraries","relationType":"implements","to":"Simplified and Streamlined APIs"}
{"type":"relation","from":"Scientific Computing Libraries","relationType":"leverages","to":"INumber Interface"}
{"type":"relation","from":"Data Management Libraries","relationType":"licensedWith","to":"MIT License"}
{"type":"relation","from":"Scientific Computing Libraries","relationType":"licensedWith","to":"MIT License"}
{"type":"relation","from":"Type Safety Libraries","relationType":"licensedWith","to":"MIT License"}
{"type":"relation","from":"UI Development Libraries","relationType":"licensedWith","to":"MIT License"}
{"type":"relation","from":"Utility Libraries","relationType":"licensedWith","to":"MIT License"}
{"type":"relation","from":"AppDataStorage","relationType":"may use","to":"ToStringJsonConverter"}
{"type":"relation","from":"9f1_search_nodes","relationType":"preferredOver","to":"9f1_read_graph"}
{"type":"relation","from":"insert_edit_into_file","relationType":"preferredOver","to":"run_in_terminal"}
{"type":"relation","from":"semantic_search","relationType":"preferredOver","to":"grep_search"}
{"type":"relation","from":"Physics.Constants","relationType":"relatedTo","to":"PhysicalQuantity"}
{"type":"relation","from":"Physics.Earth","relationType":"relatedTo","to":"Physics.Atmospherics"}
{"type":"relation","from":"Physics.Earth","relationType":"relatedTo","to":"Physics.Constants"}
{"type":"relation","from":"SemanticQuantity","relationType":"relatedTo","to":"PhysicalQuantity"}
{"type":"relation","from":"SemanticQuantity","relationType":"relatedTo","to":"SignificantNumber"}
{"type":"relation","from":"SemanticString","relationType":"similarTo","to":"StrongStrings"}
{"type":"relation","from":".NET 8","relationType":"supports","to":"INumber Interface"}
{"type":"relation","from":"get_errors","relationType":"usedAfter","to":"insert_edit_into_file"}
{"type":"relation","from":"list_dir","relationType":"usedBefore","to":"read_file"}
{"type":"relation","from":"GitHub Tools","relationType":"usedFor","to":"Workflow Guidelines"}
{"type":"relation","from":"Memory Management Tools","relationType":"usedFor","to":"Project Knowledge Management"}
{"type":"relation","from":"AppDataStorage","relationType":"uses","to":"System.Text.Json"}
{"type":"relation","from":"CaseConverter","relationType":"uses","to":"Extension Methods"}
{"type":"relation","from":"Data Management Libraries","relationType":"uses","to":"Data Persistence"}
{"type":"relation","from":"Data Persistence","relationType":"uses","to":"System.Text.Json"}
{"type":"relation","from":"ImGuiApp","relationType":"uses","to":"Dear ImGui"}
{"type":"relation","from":"ImGuiApp","relationType":"uses","to":"ImGui.NET"}
{"type":"relation","from":"ImGuiApp","relationType":"uses","to":"Silk.NET"}
{"type":"relation","from":"ImGuiPopups","relationType":"uses","to":"ImGui.NET"}
{"type":"relation","from":"ImGuiStyler","relationType":"uses","to":"ImGui.NET"}
{"type":"relation","from":"ImGuiWidgets","relationType":"uses","to":"ImGui.NET"}
{"type":"relation","from":"Modern C# Features","relationType":"uses","to":"Extension Methods"}
{"type":"relation","from":"PhysicalQuantity","relationType":"uses","to":"Semantic Typing"}
{"type":"relation","from":"Scientific Computing Libraries","relationType":"uses","to":"Type Safety"}
{"type":"relation","from":"SemanticQuantity","relationType":"uses","to":".NET 8"}
{"type":"relation","from":"SemanticQuantity","relationType":"uses","to":"INumber Interface"}
{"type":"relation","from":"SemanticQuantity","relationType":"uses","to":"Semantic Typing"}
{"type":"relation","from":"SemanticString","relationType":"uses","to":"Semantic Typing"}
{"type":"relation","from":"SignificantNumber","relationType":"uses","to":".NET 8"}
{"type":"relation","from":"SignificantNumber","relationType":"uses","to":"INumber Interface"}
{"type":"relation","from":"StrongPaths","relationType":"uses","to":"Extension Methods"}
{"type":"relation","from":"StrongPaths","relationType":"uses","to":"Semantic Typing"}
{"type":"relation","from":"StrongStrings","relationType":"uses","to":"Semantic Typing"}
{"type":"relation","from":"Type Safety Libraries","relationType":"uses","to":"Semantic Typing"}
{"type":"relation","from":"Type Safety Libraries","relationType":"uses","to":"Type Safety"}
{"type":"relation","from":"UI Development Libraries","relationType":"uses","to":"ImGui.NET"}
{"type":"relation","from":"ImGui.NET","relationType":"wraps","to":"Dear ImGui"}
